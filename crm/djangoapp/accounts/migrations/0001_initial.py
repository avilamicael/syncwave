# Generated by Django 5.2.6 on 2025-09-19 22:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome da Empresa')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True, verbose_name='CNPJ')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail da Empresa')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='Estado')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP')),
                ('company_type', models.CharField(choices=[('master', 'Master'), ('client', 'Client')], default='client', max_length=20, verbose_name='Tipo da Empresa')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('manager', 'Gerente'), ('employee', 'Funcionário'), ('viewer', 'Visualizador')], default='employee', max_length=20, verbose_name='Cargo/Função')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='Departamento')),
                ('can_access_all_companies', models.BooleanField(default=False, verbose_name='Pode acessar todas as empresas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='accounts.company', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CompanyPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_type', models.CharField(help_text='Ex: Leitura, Escrita, Admin', max_length=50, verbose_name='Tipo de Permissão')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('company_granted', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions_received', to='accounts.company', verbose_name='Empresa com Acesso')),
                ('company_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions_granted', to='accounts.company', verbose_name='Empresa Proprietária')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Permissão entre Empresas',
                'verbose_name_plural': 'Permissões entre Empresas',
                'unique_together': {('company_owner', 'company_granted', 'permission_type')},
            },
        ),
    ]
